Question 6: Create a simple TextFormField that displays a label and saves the user input to a variable.
Source Code :
import 'package:flutter/material.dart';

void main() {
  runApp(const TextFieldApp());
}

class TextFieldApp extends StatelessWidget {
  const TextFieldApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: SimpleTextFormField(),
    );
  }
}

class SimpleTextFormField extends StatefulWidget {
  const SimpleTextFormField({super.key});

  @override
  State<SimpleTextFormField> createState() => _SimpleTextFormFieldState();
}

class _SimpleTextFormFieldState extends State<SimpleTextFormField> {
  final TextEditingController nameController = TextEditingController();
  String savedName = '';

  void saveInput() {
    setState(() {
      savedName = nameController.text;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('TextFormField Example'),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            // Step 2: TextFormField with label
            TextFormField(
              controller: nameController,
              decoration: const InputDecoration(
                labelText: 'Enter your name',
                border: OutlineInputBorder(),
              ),
            ),
            const SizedBox(height: 20),

            // Step 3: Button to save text
            ElevatedButton(
              onPressed: saveInput,
              child: const Text('Save Name'),
            ),

            const SizedBox(height: 20),

            // Display saved value
            Text(
              savedName.isEmpty
                  ? 'No name saved yet.'
                  : 'Saved Name: $savedName',
              style: const TextStyle(fontSize: 18),
            ),
          ],
        ),
      ),
    );
  }
}
