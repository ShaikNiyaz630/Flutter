Question 3: Render given images if the index is odd then display the first image and if even then display the second image and also display the index number above the image in the left corner. and the max count should be 20. What will be your approach to solving this problem statement?
Image1: https://i.picsum.photos/id/9/250/250.jpg?hmac=tqDH5wEWHDN76mBIWEPzg1in6egMl49qZeguSaH9_VI
Image2: https://images.pexels.com/photos/213780/pexels-photo-213780.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500
Hint 1:- Use listview.builder or gridview
Hint 2:- Add logic to find the odd and even number
Hint 3:- Add network.image widget for rendering the internet image in UI

Source Code :
import 'package:flutter/material.dart';

void main() {
  runApp(const ImageRenderApp());
}

class ImageRenderApp extends StatelessWidget {
  const ImageRenderApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: ImageRenderScreen(),
    );
  }
}

class ImageRenderScreen extends StatelessWidget {
  const ImageRenderScreen({super.key});

  final String image1 =
      'https://i.picsum.photos/id/9/250/250.jpg?hmac=tqDH5wEWHDN76mBIWEPzg1in6egMl49qZeguSaH9_VI';
  final String image2 =
      'https://images.pexels.com/photos/213780/pexels-photo-213780.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Odd & Even Image Renderer'),
        centerTitle: true,
      ),
      body: GridView.builder(
        itemCount: 20, // max count 20
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 2, // two columns
          crossAxisSpacing: 8,
          mainAxisSpacing: 8,
        ),
        padding: const EdgeInsets.all(8.0),
        itemBuilder: (context, index) {
          final bool isEven = index % 2 == 0;
          final String imageUrl = isEven ? image2 : image1;

          return Stack(
            children: [
              // Image container
              Container(
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(12),
                  image: DecorationImage(
                    image: NetworkImage(imageUrl),
                    fit: BoxFit.cover,
                  ),
                ),
              ),
              // Index number in top-left
              Positioned(
                top: 8,
                left: 8,
                child: Container(
                  padding:
                      const EdgeInsets.symmetric(horizontal: 6, vertical: 4),
                  decoration: BoxDecoration(
                    color: Colors.black54,
                    borderRadius: BorderRadius.circular(6),
                  ),
                  child: Text(
                    index.toString(),
                    style: const TextStyle(
                      color: Colors.white,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ),
            ],
          );
        },
      ),
    );
  }
}
